<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hz.mapper.FenyeTestMapper">
  <resultMap id="BaseResultMap" type="com.hz.entity.FenyeTest">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="page" jdbcType="BIGINT" property="page" />
  </resultMap>
  <!--要查询的字段名 -->
  <sql id="Base_Column_List">
  	id, name, num, phone, content, title, text, page
  </sql>
  <!--parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集合返回结果，实体对象  -->
  <select id="findByPage" parameterType="Map" resultMap="BaseResultMap">
  	SELECT
  	<include refid="Base_Column_List"/>
  	FROM fenyetest
  	<if test="startRow != null and pageSize != null">
  		limit #{startRow} ,#{pageSize}
  	</if>
  </select>
  <!--查询所有数据  -->
  <select id="selectAllList" resultMap="BaseResultMap">
  	SELECT
  	<include refid="Base_Column_List"/>
  	FROM fenyetest
  </select>
  <!--查询总记录数 -->
  <select id="selectCount" parameterType="com.hz.util.PageBean"  resultType="java.lang.Integer">
  	SELECT count(*) FROM fenyetest
  </select>
  <!--条件查询 -->
  <!-- <select id="selectListContion" parameterType="Map" resultMap="BaseResultMap">
  	SELECT
  	<include refid="Base_Column_List"/>
  	FROM fenyetest
  	<if test="name != null and name != null">
  		limit #{startRow} ,#{pageSize}
  	</if>
  </select>
  条件查询总记录数
  <select id="selecttListContionCount" parameterType="Map" resultMap="BaseResultMap">
  	SELECT count(*) FROM fenyetest
  	<if test="startRow != null and pageSize != null">
  		limit #{startRow} ,#{pageSize}
  	</if>
  </select> -->
</mapper>